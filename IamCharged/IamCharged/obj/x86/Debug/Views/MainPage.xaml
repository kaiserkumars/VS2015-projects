<Page x:ConnectionId='1' x:Class="IamCharged.Views.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Behaviors="using:Template10.Behaviors"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
     
      xmlns:local="using:IamCharged"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:IamCharged.ViewModels"
      mc:Ignorable="d">

    <Page.DataContext>
        <vm:MainPageViewModel x:ConnectionId='2' x:Name="ViewModel" />
    </Page.DataContext>

    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:ConnectionId='3' x:Name="PlentyOfBattery">
                    <VisualState.StateTriggers>
                        <local:BatteryTrigger Charging="False" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="StatusTextBlock.Text" 
							Value="Plugged in and Charging!" />
                        <Setter Target="StatusTextBlock.Foreground"
                                Value="Green"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:ConnectionId='4' x:Name="NeedsCharging">
                    <VisualState.StateTriggers>
                        <local:BatteryTrigger Charging="True" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="StatusTextBlock.Text" 
							Value="Unplugged!" />
                        <Setter Target="StatusTextBlock.Foreground"
                                Value="Red"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        
        
        
        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,100,0,0">
            <TextBlock x:ConnectionId='9' x:Name="CurrentDevices" HorizontalAlignment="Center" FontSize="32"/>
            <TextBlock x:ConnectionId='10' x:Name="BatteryPercentageTextBlock" 
					HorizontalAlignment="Center"
                    
					FontSize="64" 
					FontWeight="Normal" />
            <TextBlock x:ConnectionId='11' x:Name="StatusTextBlock" FontSize="32" HorizontalAlignment="Center"/>
            <TextBlock x:ConnectionId='12' x:Name="OtherDevices" FontSize="32" Text="Your Other Devices" HorizontalAlignment="Center" Margin="0,20,0,0"/>
        </StackPanel>
        <controls:PageHeader x:ConnectionId='5' x:Name="pageHeader"
                             RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             RelativePanel.AlignTopWithPanel="True"
                             Text="Main Page">


            <controls:PageHeader.SecondaryCommands>
                <AppBarButton x:ConnectionId='6'                                         Label="Settings" />
                <AppBarButton x:ConnectionId='7'                                        Label="Privacy" />
                <AppBarButton x:ConnectionId='8'                                      Label="About" />
            </controls:PageHeader.SecondaryCommands>

        </controls:PageHeader>
    </Grid>
</Page>



<!-- 
    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        
                        <Setter Target="stateTextBox.Text" Value="Narrow Visual State" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        
                        <Setter Target="stateTextBox.Text" Value="Normal Visual State" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        
                        <Setter Target="stateTextBox.Text" Value="Wide Visual State" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        
        </VisualStateManager.VisualStateGroups>

        
        <controls:PageHeader x:Name="pageHeader"
                             RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             RelativePanel.AlignTopWithPanel="True"
                             Text="Main Page">

            
            <controls:PageHeader.SecondaryCommands>
                <AppBarButton Click="{x:Bind ViewModel.GotoSettings}" Label="Settings" />
                <AppBarButton Click="{x:Bind ViewModel.GotoPrivacy}" Label="Privacy" />
                <AppBarButton Click="{x:Bind ViewModel.GotoAbout}" Label="About" />
            </controls:PageHeader.SecondaryCommands>

        </controls:PageHeader>

        <RelativePanel EntranceNavigationTransitionInfo.IsTargetElement="True"
                       RelativePanel.AlignBottomWithPanel="True"
                       RelativePanel.AlignLeftWithPanel="True"
                       RelativePanel.AlignRightWithPanel="True"
                       RelativePanel.Below="pageHeader">


            <controls:Resizer x:Name="parameterResizer" Margin="16,16,16,0">

                <TextBox MinWidth="150"
                         MinHeight="62"
                         Header="Parameter to pass"
                         Text="{Binding Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         TextWrapping="Wrap">
                    <Interactivity:Interaction.Behaviors>

                       
                        <Behaviors:KeyBehavior Key="Enter">
                            <Core:CallMethodAction MethodName="GotoDetailsPage" TargetObject="{Binding}" />
                        </Behaviors:KeyBehavior>

                        
                        <Core:EventTriggerBehavior>
                            <Behaviors:FocusAction />
                        </Core:EventTriggerBehavior>

                    </Interactivity:Interaction.Behaviors>
                </TextBox>

            </controls:Resizer>

            <Button x:Name="submitButton"
                    Click="{x:Bind ViewModel.GotoDetailsPage}"
                    Content="Submit"
                    RelativePanel.AlignBottomWith="parameterResizer"
                    RelativePanel.RightOf="parameterResizer" />

            <TextBlock x:Name="stateTextBox"
                       Margin="16,16,0,0"
                       RelativePanel.AlignLeftWith="parameterResizer"
                       RelativePanel.Below="parameterResizer"
                       Text="Current Visual State" />

        </RelativePanel>

    </RelativePanel>
</Page>

-->

